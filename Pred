import pandas as pd
import numpy as np
from datetime import datetime

def parse_date(s):
    # Parses the date from the string format "Monthly Return yyyy-mm Base currency"
    try:
        parts = s.split()
        date_str = parts[2]
        date = datetime.strptime(date_str, '%Y-%m')
        return date
    except Exception:
        return None

def calculate_max_drawdown(cum_returns):
    # Calculates the maximum drawdown and corresponding dates
    cumulative_max = cum_returns.cummax()
    drawdowns = cum_returns / cumulative_max - 1
    max_drawdown = drawdowns.min()
    
    trough_date = drawdowns.idxmin()
    peak_date = cum_returns.loc[:trough_date].idxmax()
    
    recovery_period = cum_returns.loc[trough_date:]
    recovery_date = recovery_period[recovery_period >= cumulative_max[peak_date]].first_valid_index()
    
    if recovery_date is None:
        recovery_date = 'Not yet recovered'
    
    return max_drawdown, peak_date, trough_date, recovery_date

def main():
    # Read data from Sheet2
    df = pd.read_excel('input_file.xlsx', sheet_name='Sheet2', header=None)
    
    # Process dates and set as index
    date_strings = df.iloc[1:, 0]
    dates = date_strings.apply(parse_date)
    df_data = df.iloc[1:, 1:]
    df_data.index = dates
    fund_names = df.iloc[0, 1:]
    df_data.columns = fund_names
    
    # Convert data to numeric and clean up
    df_data = df_data.apply(pd.to_numeric, errors='coerce')
    df_data = df_data[~df_data.index.isnull()]
    df_data = df_data.sort_index()
    
    # Calculate return and volatility over the last 3 months
    last_three_dates = df_data.index[-3:]
    df_last3 = df_data.loc[last_three_dates] / 100.0
    cumulative_return = (df_last3 + 1).prod() - 1
    volatility = df_last3.std()
    
    # Calculate cumulative returns
    df_returns = df_data / 100.0
    df_cum_returns = (1 + df_returns).cumprod()
    
    # Calculate maximum drawdown
    max_drawdowns = {}
    for fund in df_cum_returns.columns:
        cum_returns = df_cum_returns[fund].dropna()
        if cum_returns.empty:
            continue
        max_dd, peak_date, trough_date, recovery_date = calculate_max_drawdown(cum_returns)
        max_drawdowns[fund] = {
            'Max Drawdown': max_dd,
            'Peak Date': peak_date,
            'Trough Date': trough_date,
            'Recovery Date': recovery_date
        }
    
    # Compile final results
    results = pd.DataFrame({
        'Return (Last 3 Months)': cumulative_return,
        'Volatility (Last 3 Months)': volatility
    })
    df_max_drawdown = pd.DataFrame(max_drawdowns).T
    final_results = results.join(df_max_drawdown)
    
    # Write results to a new Excel file
    final_results.to_excel('output_file.xlsx')

if __name__ == "__main__":
    main()
